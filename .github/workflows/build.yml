name: build

on:
  pull_request: ~
  push:
    branches: [master]
    tags: ['v*']


jobs:
  # tests:
  #   # if: startsWith(github.ref, 'v')
  #   runs-on: ubuntu-latest
  #   # strategy:
  #   #   matrix:
  #   #     os: [macos-latest, windows-latest, ubuntu-latest]
  #   #     node-version: [10.x, 12.x]
  #   steps:
  #   - uses: actions/checkout@v2
  #   - uses: actions/setup-node@v1
  #     with:
  #       node-version: 12.x
  #   - run: npm ci
  #   - run: echo ${{ github.ref }}
  #   - run: echo ${{ github.event }}
  #   - run: echo
  #   - run: npm run test

  # checks:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - uses: actions/setup-node@v1
  #     with:
  #       node-version: '12.x'
  #   - run: npm ci
  #   - run: npm run lint
  #     name: Static Code Check
  #   - run: yarn license-checker
  #   - run: yarn license-checker --onlyAllow "MIT;Apache;ISC;BSD;WTFPL;Artistic;CC-BY;CC0;Unlicense"
  #     name: License Check
  #   - run: yarn audit-ci -m
  #     name: Dependency Vulnerability Check

  canary-release:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    # needs: [tests, checks]
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - run: yarn install --frozen-lockfile
      - run: git status
      - name: Canary Release
        if: startsWith(github.ref, 'refs/tags/v') != true
        run: |
          git update-index --assume-unchanged .npmrc
          echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}' >> .npmrc
          git status
          yarn lerna publish --canary --no-push --no-git-tag-version --dist-tag canary --force-publish --preid `git rev-parse --short HEAD` -y
        env:
          NPM_TOKEN: ${{ secrets.NPMJS_ACCESS_TOKEN }}
  draft-github-release:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    # needs: [tests]
    steps:
      - uses: actions/checkout@v1

      - uses: ./.github/actions/get-changelog
        id: cl
      - uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: true
          body: ${{ steps.cl.outputs.changelog }}

